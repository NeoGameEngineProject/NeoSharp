/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class Scene : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Scene(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Scene obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Scene() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          NeoNativeEnginePINVOKE.delete_Scene(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public Scene() : this(NeoNativeEnginePINVOKE.new_Scene(), true) {
  }

  public void setName(string name) {
    NeoNativeEnginePINVOKE.Scene_setName(swigCPtr, name);
  }

  public string getName() {
    string ret = NeoNativeEnginePINVOKE.Scene_getName(swigCPtr);
    return ret;
  }

  public MVector3 getAmbientLight() {
    MVector3 ret = new MVector3(NeoNativeEnginePINVOKE.Scene_getAmbientLight(swigCPtr), true);
    return ret;
  }

  public void setAmbientLight(MVector3 light) {
    NeoNativeEnginePINVOKE.Scene_setAmbientLight(swigCPtr, MVector3.getCPtr(light));
    if (NeoNativeEnginePINVOKE.SWIGPendingException.Pending) throw NeoNativeEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public void setDataMode(M_DATA_MODES dataMode) {
    NeoNativeEnginePINVOKE.Scene_setDataMode(swigCPtr, (int)dataMode);
  }

  public M_DATA_MODES getDataMode() {
    M_DATA_MODES ret = (M_DATA_MODES)NeoNativeEnginePINVOKE.Scene_getDataMode(swigCPtr);
    return ret;
  }

  public void setScriptFilename(string scriptFilename) {
    NeoNativeEnginePINVOKE.Scene_setScriptFilename(swigCPtr, scriptFilename);
  }

  public string getScriptFilename() {
    string ret = NeoNativeEnginePINVOKE.Scene_getScriptFilename(swigCPtr);
    return ret;
  }

  public void setGravity(MVector3 gravity) {
    NeoNativeEnginePINVOKE.Scene_setGravity(swigCPtr, MVector3.getCPtr(gravity));
    if (NeoNativeEnginePINVOKE.SWIGPendingException.Pending) throw NeoNativeEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public MVector3 getGravity() {
    MVector3 ret = new MVector3(NeoNativeEnginePINVOKE.Scene_getGravity(swigCPtr), true);
    return ret;
  }

  public void playLoopSounds() {
    NeoNativeEnginePINVOKE.Scene_playLoopSounds(swigCPtr);
  }

  public void stopAllSounds() {
    NeoNativeEnginePINVOKE.Scene_stopAllSounds(swigCPtr);
  }

  public void deleteObject(Object3d arg0) {
    NeoNativeEnginePINVOKE.Scene_deleteObject(swigCPtr, Object3d.getCPtr(arg0));
  }

  public OCamera addNewCamera() {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_addNewCamera__SWIG_0(swigCPtr);
    OCamera ret = (cPtr == global::System.IntPtr.Zero) ? null : new OCamera(cPtr, false);
    return ret;
  }

  public OCamera addNewCamera(OCamera camera) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_addNewCamera__SWIG_1(swigCPtr, OCamera.getCPtr(camera));
    OCamera ret = (cPtr == global::System.IntPtr.Zero) ? null : new OCamera(cPtr, false);
    if (NeoNativeEnginePINVOKE.SWIGPendingException.Pending) throw NeoNativeEnginePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OLight addNewLight() {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_addNewLight__SWIG_0(swigCPtr);
    OLight ret = (cPtr == global::System.IntPtr.Zero) ? null : new OLight(cPtr, false);
    return ret;
  }

  public Object3d addNewGroup() {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_addNewGroup__SWIG_0(swigCPtr);
    Object3d ret = (cPtr == global::System.IntPtr.Zero) ? null : new Object3d(cPtr, false);
    return ret;
  }

  public Object3d addNewGroup(Object3d arg0) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_addNewGroup__SWIG_1(swigCPtr, Object3d.getCPtr(arg0));
    Object3d ret = (cPtr == global::System.IntPtr.Zero) ? null : new Object3d(cPtr, false);
    if (NeoNativeEnginePINVOKE.SWIGPendingException.Pending) throw NeoNativeEnginePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OLight addNewLight(OLight light) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_addNewLight__SWIG_1(swigCPtr, OLight.getCPtr(light));
    OLight ret = (cPtr == global::System.IntPtr.Zero) ? null : new OLight(cPtr, false);
    if (NeoNativeEnginePINVOKE.SWIGPendingException.Pending) throw NeoNativeEnginePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OEntity addNewEntity(SWIGTYPE_p_Neo__MeshRef meshRef) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_addNewEntity__SWIG_0(swigCPtr, SWIGTYPE_p_Neo__MeshRef.getCPtr(meshRef));
    OEntity ret = (cPtr == global::System.IntPtr.Zero) ? null : new OEntity(cPtr, false);
    return ret;
  }

  public OEntity addNewEntity(OEntity entity) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_addNewEntity__SWIG_1(swigCPtr, OEntity.getCPtr(entity));
    OEntity ret = (cPtr == global::System.IntPtr.Zero) ? null : new OEntity(cPtr, false);
    if (NeoNativeEnginePINVOKE.SWIGPendingException.Pending) throw NeoNativeEnginePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OSound addNewSound(SWIGTYPE_p_Neo__SoundRef soundRef) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_addNewSound__SWIG_0(swigCPtr, SWIGTYPE_p_Neo__SoundRef.getCPtr(soundRef));
    OSound ret = (cPtr == global::System.IntPtr.Zero) ? null : new OSound(cPtr, false);
    return ret;
  }

  public OSound addNewSound(OSound sound) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_addNewSound__SWIG_1(swigCPtr, OSound.getCPtr(sound));
    OSound ret = (cPtr == global::System.IntPtr.Zero) ? null : new OSound(cPtr, false);
    if (NeoNativeEnginePINVOKE.SWIGPendingException.Pending) throw NeoNativeEnginePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public OText addNewText(SWIGTYPE_p_Neo__FontRef fontRef) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_addNewText__SWIG_0(swigCPtr, SWIGTYPE_p_Neo__FontRef.getCPtr(fontRef));
    OText ret = (cPtr == global::System.IntPtr.Zero) ? null : new OText(cPtr, false);
    return ret;
  }

  public OText addNewText(OText text) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_addNewText__SWIG_1(swigCPtr, OText.getCPtr(text));
    OText ret = (cPtr == global::System.IntPtr.Zero) ? null : new OText(cPtr, false);
    if (NeoNativeEnginePINVOKE.SWIGPendingException.Pending) throw NeoNativeEnginePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public uint getObjectsNumber() {
    uint ret = NeoNativeEnginePINVOKE.Scene_getObjectsNumber(swigCPtr);
    return ret;
  }

  public uint getCamerasNumber() {
    uint ret = NeoNativeEnginePINVOKE.Scene_getCamerasNumber(swigCPtr);
    return ret;
  }

  public uint getLightsNumber() {
    uint ret = NeoNativeEnginePINVOKE.Scene_getLightsNumber(swigCPtr);
    return ret;
  }

  public uint getEntitiesNumber() {
    uint ret = NeoNativeEnginePINVOKE.Scene_getEntitiesNumber(swigCPtr);
    return ret;
  }

  public uint getSoundsNumber() {
    uint ret = NeoNativeEnginePINVOKE.Scene_getSoundsNumber(swigCPtr);
    return ret;
  }

  public uint getTextsNumber() {
    uint ret = NeoNativeEnginePINVOKE.Scene_getTextsNumber(swigCPtr);
    return ret;
  }

  public void setCurrentCameraId(uint id) {
    NeoNativeEnginePINVOKE.Scene_setCurrentCameraId(swigCPtr, id);
  }

  public uint getCurrentCameraId() {
    uint ret = NeoNativeEnginePINVOKE.Scene_getCurrentCameraId(swigCPtr);
    return ret;
  }

  public OCamera getCurrentCamera() {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_getCurrentCamera(swigCPtr);
    OCamera ret = (cPtr == global::System.IntPtr.Zero) ? null : new OCamera(cPtr, false);
    return ret;
  }

  public void setCurrentFrame(int currentFrame) {
    NeoNativeEnginePINVOKE.Scene_setCurrentFrame(swigCPtr, currentFrame);
  }

  public int getCurrentFrame() {
    int ret = NeoNativeEnginePINVOKE.Scene_getCurrentFrame(swigCPtr);
    return ret;
  }

  public Object3d getObjectByName(string name) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_getObjectByName(swigCPtr, name);
    Object3d ret = (cPtr == global::System.IntPtr.Zero) ? null : new Object3d(cPtr, false);
    return ret;
  }

  public Object3d getObjectByHandle(uint handle) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_getObjectByHandle(swigCPtr, handle);
    Object3d ret = (cPtr == global::System.IntPtr.Zero) ? null : new Object3d(cPtr, false);
    return ret;
  }

  public OLight getLightByName(string name) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_getLightByName(swigCPtr, name);
    OLight ret = (cPtr == global::System.IntPtr.Zero) ? null : new OLight(cPtr, false);
    return ret;
  }

  public OCamera getCameraByName(string name) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_getCameraByName(swigCPtr, name);
    OCamera ret = (cPtr == global::System.IntPtr.Zero) ? null : new OCamera(cPtr, false);
    return ret;
  }

  public OEntity getEntityByName(string name) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_getEntityByName(swigCPtr, name);
    OEntity ret = (cPtr == global::System.IntPtr.Zero) ? null : new OEntity(cPtr, false);
    return ret;
  }

  public OSound getSoundByName(string name) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_getSoundByName(swigCPtr, name);
    OSound ret = (cPtr == global::System.IntPtr.Zero) ? null : new OSound(cPtr, false);
    return ret;
  }

  public OText getTextByName(string name) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_getTextByName(swigCPtr, name);
    OText ret = (cPtr == global::System.IntPtr.Zero) ? null : new OText(cPtr, false);
    return ret;
  }

  public bool getObjectIndex(string name, SWIGTYPE_p_unsigned_int id) {
    bool ret = NeoNativeEnginePINVOKE.Scene_getObjectIndex(swigCPtr, name, SWIGTYPE_p_unsigned_int.getCPtr(id));
    return ret;
  }

  public Object3d getObjectByIndex(uint index) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_getObjectByIndex(swigCPtr, index);
    Object3d ret = (cPtr == global::System.IntPtr.Zero) ? null : new Object3d(cPtr, false);
    return ret;
  }

  public OLight getLightByIndex(uint index) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_getLightByIndex(swigCPtr, index);
    OLight ret = (cPtr == global::System.IntPtr.Zero) ? null : new OLight(cPtr, false);
    return ret;
  }

  public OCamera getCameraByIndex(uint index) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_getCameraByIndex(swigCPtr, index);
    OCamera ret = (cPtr == global::System.IntPtr.Zero) ? null : new OCamera(cPtr, false);
    return ret;
  }

  public OEntity getEntityByIndex(uint index) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_getEntityByIndex(swigCPtr, index);
    OEntity ret = (cPtr == global::System.IntPtr.Zero) ? null : new OEntity(cPtr, false);
    return ret;
  }

  public OSound getSoundByIndex(uint index) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_getSoundByIndex(swigCPtr, index);
    OSound ret = (cPtr == global::System.IntPtr.Zero) ? null : new OSound(cPtr, false);
    return ret;
  }

  public OText getTextByIndex(uint index) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Scene_getTextByIndex(swigCPtr, index);
    OText ret = (cPtr == global::System.IntPtr.Zero) ? null : new OText(cPtr, false);
    return ret;
  }

  public void begin() {
    NeoNativeEnginePINVOKE.Scene_begin(swigCPtr);
  }

  public void end() {
    NeoNativeEnginePINVOKE.Scene_end(swigCPtr);
  }

  public void prepareCollisionShape(OEntity entity) {
    NeoNativeEnginePINVOKE.Scene_prepareCollisionShape(swigCPtr, OEntity.getCPtr(entity));
  }

  public void prepareCollisionObject(OEntity entity) {
    NeoNativeEnginePINVOKE.Scene_prepareCollisionObject(swigCPtr, OEntity.getCPtr(entity));
  }

  public void prepareConstraints(OEntity entity) {
    NeoNativeEnginePINVOKE.Scene_prepareConstraints(swigCPtr, OEntity.getCPtr(entity));
  }

  public void preparePhysics() {
    NeoNativeEnginePINVOKE.Scene_preparePhysics(swigCPtr);
  }

  public void updatePhysics() {
    NeoNativeEnginePINVOKE.Scene_updatePhysics(swigCPtr);
  }

  public void update() {
    NeoNativeEnginePINVOKE.Scene_update(swigCPtr);
  }

  public void updateObjectsBehaviors() {
    NeoNativeEnginePINVOKE.Scene_updateObjectsBehaviors(swigCPtr);
  }

  public void drawObjectsBehaviors() {
    NeoNativeEnginePINVOKE.Scene_drawObjectsBehaviors(swigCPtr);
  }

  public void updateObjectsMatrices() {
    NeoNativeEnginePINVOKE.Scene_updateObjectsMatrices(swigCPtr);
  }

  public void draw(OCamera camera) {
    NeoNativeEnginePINVOKE.Scene_draw(swigCPtr, OCamera.getCPtr(camera));
  }

}
