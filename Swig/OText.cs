//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.5
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class OText : Object3d {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;

  internal OText(global::System.IntPtr cPtr, bool cMemoryOwn) : base(NeoNativeEnginePINVOKE.OText_SWIGUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(OText obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~OText() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          NeoNativeEnginePINVOKE.delete_OText(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public OText(SWIGTYPE_p_Neo__FontRef fontRef) : this(NeoNativeEnginePINVOKE.new_OText__SWIG_0(SWIGTYPE_p_Neo__FontRef.getCPtr(fontRef)), true) {
  }

  public OText(OText text) : this(NeoNativeEnginePINVOKE.new_OText__SWIG_1(OText.getCPtr(text)), true) {
    if (NeoNativeEnginePINVOKE.SWIGPendingException.Pending) throw NeoNativeEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public override int getType() {
    int ret = NeoNativeEnginePINVOKE.OText_getType(swigCPtr);
    return ret;
  }

  public void setFontRef(SWIGTYPE_p_Neo__FontRef fontRef) {
    NeoNativeEnginePINVOKE.OText_setFontRef(swigCPtr, SWIGTYPE_p_Neo__FontRef.getCPtr(fontRef));
  }

  public SWIGTYPE_p_Font getFont() {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.OText_getFont(swigCPtr);
    SWIGTYPE_p_Font ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_Font(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_Neo__FontRef getFontRef() {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.OText_getFontRef(swigCPtr);
    SWIGTYPE_p_Neo__FontRef ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_Neo__FontRef(cPtr, false);
    return ret;
  }

  public void setText(string text) {
    NeoNativeEnginePINVOKE.OText_setText(swigCPtr, text);
  }

  public string getText() {
    string ret = NeoNativeEnginePINVOKE.OText_getText(swigCPtr);
    return ret;
  }

  public SWIGTYPE_p_vectorT_float_t getLinesOffset() {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.OText_getLinesOffset(swigCPtr);
    SWIGTYPE_p_vectorT_float_t ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_vectorT_float_t(cPtr, false);
    return ret;
  }

  public void setAlign(TEXT_ALIGN_MODES align) {
    NeoNativeEnginePINVOKE.OText_setAlign(swigCPtr, (int)align);
  }

  public TEXT_ALIGN_MODES getAlign() {
    TEXT_ALIGN_MODES ret = (TEXT_ALIGN_MODES)NeoNativeEnginePINVOKE.OText_getAlign(swigCPtr);
    return ret;
  }

  public void setSize(float size) {
    NeoNativeEnginePINVOKE.OText_setSize(swigCPtr, size);
  }

  public float getSize() {
    float ret = NeoNativeEnginePINVOKE.OText_getSize(swigCPtr);
    return ret;
  }

  public void setColor(Vector4 color) {
    NeoNativeEnginePINVOKE.OText_setColor(swigCPtr, Vector4.getCPtr(color));
    if (NeoNativeEnginePINVOKE.SWIGPendingException.Pending) throw NeoNativeEnginePINVOKE.SWIGPendingException.Retrieve();
  }

  public Vector4 getColor() {
    Vector4 ret = new Vector4(NeoNativeEnginePINVOKE.OText_getColor(swigCPtr), true);
    return ret;
  }

  public SWIGTYPE_p_Box3d getBoundingBox() {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.OText_getBoundingBox(swigCPtr);
    SWIGTYPE_p_Box3d ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_Box3d(cPtr, false);
    return ret;
  }

  public override void updateVisibility(OCamera camera) {
    NeoNativeEnginePINVOKE.OText_updateVisibility(swigCPtr, OCamera.getCPtr(camera));
  }

}
