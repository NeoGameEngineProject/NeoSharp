/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class Level : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal Level(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(Level obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~Level() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          NeoNativeEnginePINVOKE.delete_Level(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public Level() : this(NeoNativeEnginePINVOKE.new_Level(), true) {
  }

  public void clear() {
    NeoNativeEnginePINVOKE.Level_clear(swigCPtr);
  }

  public void clearScenes() {
    NeoNativeEnginePINVOKE.Level_clearScenes(swigCPtr);
  }

  public SWIGTYPE_p_FXManager getFXManager() {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_getFXManager(swigCPtr);
    SWIGTYPE_p_FXManager ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FXManager(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_FXRef createFX(SWIGTYPE_p_Neo__ShaderRef vertexShaderRef, SWIGTYPE_p_Neo__ShaderRef pixelShaderRef) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_createFX(swigCPtr, SWIGTYPE_p_Neo__ShaderRef.getCPtr(vertexShaderRef), SWIGTYPE_p_Neo__ShaderRef.getCPtr(pixelShaderRef));
    SWIGTYPE_p_FXRef ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_FXRef(cPtr, false);
    return ret;
  }

  public MDataManager getFontManager() {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_getFontManager(swigCPtr);
    MDataManager ret = (cPtr == global::System.IntPtr.Zero) ? null : new MDataManager(cPtr, false);
    return ret;
  }

  public MDataManager getTextureManager() {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_getTextureManager(swigCPtr);
    MDataManager ret = (cPtr == global::System.IntPtr.Zero) ? null : new MDataManager(cPtr, false);
    return ret;
  }

  public MDataManager getShaderManager() {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_getShaderManager(swigCPtr);
    MDataManager ret = (cPtr == global::System.IntPtr.Zero) ? null : new MDataManager(cPtr, false);
    return ret;
  }

  public MDataManager getSoundManager() {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_getSoundManager(swigCPtr);
    MDataManager ret = (cPtr == global::System.IntPtr.Zero) ? null : new MDataManager(cPtr, false);
    return ret;
  }

  public MDataManager getMeshManager() {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_getMeshManager(swigCPtr);
    MDataManager ret = (cPtr == global::System.IntPtr.Zero) ? null : new MDataManager(cPtr, false);
    return ret;
  }

  public MDataManager getArmatureAnimManager() {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_getArmatureAnimManager(swigCPtr);
    MDataManager ret = (cPtr == global::System.IntPtr.Zero) ? null : new MDataManager(cPtr, false);
    return ret;
  }

  public MDataManager getTexturesAnimManager() {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_getTexturesAnimManager(swigCPtr);
    MDataManager ret = (cPtr == global::System.IntPtr.Zero) ? null : new MDataManager(cPtr, false);
    return ret;
  }

  public MDataManager getMaterialsAnimManager() {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_getMaterialsAnimManager(swigCPtr);
    MDataManager ret = (cPtr == global::System.IntPtr.Zero) ? null : new MDataManager(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_Neo__FontRef loadFont(string filename) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_loadFont(swigCPtr, filename);
    SWIGTYPE_p_Neo__FontRef ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_Neo__FontRef(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_Neo__MeshRef loadMesh(string filename, bool preload) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_loadMesh__SWIG_0(swigCPtr, filename, preload);
    SWIGTYPE_p_Neo__MeshRef ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_Neo__MeshRef(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_Neo__MeshRef loadMesh(string filename) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_loadMesh__SWIG_1(swigCPtr, filename);
    SWIGTYPE_p_Neo__MeshRef ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_Neo__MeshRef(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_Neo__ArmatureAnimRef loadArmatureAnim(string filename, bool preload) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_loadArmatureAnim__SWIG_0(swigCPtr, filename, preload);
    SWIGTYPE_p_Neo__ArmatureAnimRef ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_Neo__ArmatureAnimRef(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_Neo__ArmatureAnimRef loadArmatureAnim(string filename) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_loadArmatureAnim__SWIG_1(swigCPtr, filename);
    SWIGTYPE_p_Neo__ArmatureAnimRef ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_Neo__ArmatureAnimRef(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_Neo__TexturesAnimRef loadTexturesAnim(string filename, bool preload) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_loadTexturesAnim__SWIG_0(swigCPtr, filename, preload);
    SWIGTYPE_p_Neo__TexturesAnimRef ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_Neo__TexturesAnimRef(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_Neo__TexturesAnimRef loadTexturesAnim(string filename) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_loadTexturesAnim__SWIG_1(swigCPtr, filename);
    SWIGTYPE_p_Neo__TexturesAnimRef ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_Neo__TexturesAnimRef(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_Neo__MaterialsAnimRef loadMaterialsAnim(string filename, bool preload) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_loadMaterialsAnim__SWIG_0(swigCPtr, filename, preload);
    SWIGTYPE_p_Neo__MaterialsAnimRef ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_Neo__MaterialsAnimRef(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_Neo__MaterialsAnimRef loadMaterialsAnim(string filename) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_loadMaterialsAnim__SWIG_1(swigCPtr, filename);
    SWIGTYPE_p_Neo__MaterialsAnimRef ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_Neo__MaterialsAnimRef(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_Neo__TextureRef loadTexture(string filename, bool mipmap, bool preload) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_loadTexture__SWIG_0(swigCPtr, filename, mipmap, preload);
    SWIGTYPE_p_Neo__TextureRef ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_Neo__TextureRef(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_Neo__TextureRef loadTexture(string filename, bool mipmap) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_loadTexture__SWIG_1(swigCPtr, filename, mipmap);
    SWIGTYPE_p_Neo__TextureRef ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_Neo__TextureRef(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_Neo__TextureRef loadTexture(string filename) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_loadTexture__SWIG_2(swigCPtr, filename);
    SWIGTYPE_p_Neo__TextureRef ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_Neo__TextureRef(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_Neo__SoundRef loadSound(string filename, bool preload) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_loadSound__SWIG_0(swigCPtr, filename, preload);
    SWIGTYPE_p_Neo__SoundRef ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_Neo__SoundRef(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_Neo__SoundRef loadSound(string filename) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_loadSound__SWIG_1(swigCPtr, filename);
    SWIGTYPE_p_Neo__SoundRef ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_Neo__SoundRef(cPtr, false);
    return ret;
  }

  public SWIGTYPE_p_Neo__ShaderRef loadShader(string filename, SWIGTYPE_p_M_SHADER_TYPES type) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_loadShader(swigCPtr, filename, SWIGTYPE_p_M_SHADER_TYPES.getCPtr(type));
    SWIGTYPE_p_Neo__ShaderRef ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_Neo__ShaderRef(cPtr, false);
    if (NeoNativeEnginePINVOKE.SWIGPendingException.Pending) throw NeoNativeEnginePINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void sendToUpdateQueue(MDataRef arg0) {
    NeoNativeEnginePINVOKE.Level_sendToUpdateQueue(swigCPtr, MDataRef.getCPtr(arg0));
  }

  public void sendToClearQueue(MDataRef arg0) {
    NeoNativeEnginePINVOKE.Level_sendToClearQueue(swigCPtr, MDataRef.getCPtr(arg0));
  }

  public void updateQueueDatas() {
    NeoNativeEnginePINVOKE.Level_updateQueueDatas(swigCPtr);
  }

  public void clearQueueDatas() {
    NeoNativeEnginePINVOKE.Level_clearQueueDatas(swigCPtr);
  }

  public void changeCurrentScene(uint id) {
    NeoNativeEnginePINVOKE.Level_changeCurrentScene(swigCPtr, id);
  }

  public void deleteScene(uint id) {
    NeoNativeEnginePINVOKE.Level_deleteScene(swigCPtr, id);
  }

  public bool getSceneIndexByName(string name, SWIGTYPE_p_unsigned_int index) {
    bool ret = NeoNativeEnginePINVOKE.Level_getSceneIndexByName(swigCPtr, name, SWIGTYPE_p_unsigned_int.getCPtr(index));
    return ret;
  }

  public Scene addNewScene() {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_addNewScene(swigCPtr);
    Scene ret = (cPtr == global::System.IntPtr.Zero) ? null : new Scene(cPtr, false);
    return ret;
  }

  public Scene getSceneByName(string name) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_getSceneByName(swigCPtr, name);
    Scene ret = (cPtr == global::System.IntPtr.Zero) ? null : new Scene(cPtr, false);
    return ret;
  }

  public Scene getCurrentScene() {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_getCurrentScene(swigCPtr);
    Scene ret = (cPtr == global::System.IntPtr.Zero) ? null : new Scene(cPtr, false);
    return ret;
  }

  public void setCurrentSceneId(uint id) {
    NeoNativeEnginePINVOKE.Level_setCurrentSceneId(swigCPtr, id);
  }

  public uint getCurrentSceneId() {
    uint ret = NeoNativeEnginePINVOKE.Level_getCurrentSceneId(swigCPtr);
    return ret;
  }

  public uint getScenesNumber() {
    uint ret = NeoNativeEnginePINVOKE.Level_getScenesNumber(swigCPtr);
    return ret;
  }

  public Scene getSceneByIndex(uint id) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.Level_getSceneByIndex(swigCPtr, id);
    Scene ret = (cPtr == global::System.IntPtr.Zero) ? null : new Scene(cPtr, false);
    return ret;
  }

}
