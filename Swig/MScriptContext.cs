/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class MScriptContext : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal MScriptContext(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(MScriptContext obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~MScriptContext() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          NeoNativeEnginePINVOKE.delete_MScriptContext(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public virtual bool runScript(string filename) {
    bool ret = NeoNativeEnginePINVOKE.MScriptContext_runScript(swigCPtr, filename);
    return ret;
  }

  public virtual bool startCallFunction(string name) {
    bool ret = NeoNativeEnginePINVOKE.MScriptContext_startCallFunction(swigCPtr, name);
    return ret;
  }

  public virtual bool endCallFunction(int numArgs) {
    bool ret = NeoNativeEnginePINVOKE.MScriptContext_endCallFunction__SWIG_0(swigCPtr, numArgs);
    return ret;
  }

  public virtual bool endCallFunction() {
    bool ret = NeoNativeEnginePINVOKE.MScriptContext_endCallFunction__SWIG_1(swigCPtr);
    return ret;
  }

  public virtual void callFunction(string name) {
    NeoNativeEnginePINVOKE.MScriptContext_callFunction(swigCPtr, name);
  }

  public virtual void addFunction(string name, SWIGTYPE_p_f_void__int function) {
    NeoNativeEnginePINVOKE.MScriptContext_addFunction(swigCPtr, name, SWIGTYPE_p_f_void__int.getCPtr(function));
  }

  public virtual bool runString(string str) {
    bool ret = NeoNativeEnginePINVOKE.MScriptContext_runString(swigCPtr, str);
    return ret;
  }

  public virtual uint getArgsNumber() {
    uint ret = NeoNativeEnginePINVOKE.MScriptContext_getArgsNumber(swigCPtr);
    return ret;
  }

  public virtual void getIntArray(uint arg, SWIGTYPE_p_int values, uint valuesNumber) {
    NeoNativeEnginePINVOKE.MScriptContext_getIntArray(swigCPtr, arg, SWIGTYPE_p_int.getCPtr(values), valuesNumber);
  }

  public virtual void getFloatArray(uint arg, SWIGTYPE_p_float values, uint valuesNumber) {
    NeoNativeEnginePINVOKE.MScriptContext_getFloatArray(swigCPtr, arg, SWIGTYPE_p_float.getCPtr(values), valuesNumber);
  }

  public virtual string getString(uint arg) {
    string ret = NeoNativeEnginePINVOKE.MScriptContext_getString(swigCPtr, arg);
    return ret;
  }

  public virtual int getInteger(uint arg) {
    int ret = NeoNativeEnginePINVOKE.MScriptContext_getInteger(swigCPtr, arg);
    return ret;
  }

  public virtual float getFloat(uint arg) {
    float ret = NeoNativeEnginePINVOKE.MScriptContext_getFloat(swigCPtr, arg);
    return ret;
  }

  public virtual SWIGTYPE_p_void getPointer(uint arg) {
    global::System.IntPtr cPtr = NeoNativeEnginePINVOKE.MScriptContext_getPointer(swigCPtr, arg);
    SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
    return ret;
  }

  public virtual bool getBoolean(uint arg) {
    bool ret = NeoNativeEnginePINVOKE.MScriptContext_getBoolean(swigCPtr, arg);
    return ret;
  }

  public virtual void pushIntArray(SWIGTYPE_p_int values, uint valuesNumber) {
    NeoNativeEnginePINVOKE.MScriptContext_pushIntArray(swigCPtr, SWIGTYPE_p_int.getCPtr(values), valuesNumber);
  }

  public virtual void pushFloatArray(SWIGTYPE_p_float values, uint valuesNumber) {
    NeoNativeEnginePINVOKE.MScriptContext_pushFloatArray(swigCPtr, SWIGTYPE_p_float.getCPtr(values), valuesNumber);
  }

  public virtual void pushString(string arg0) {
    NeoNativeEnginePINVOKE.MScriptContext_pushString(swigCPtr, arg0);
  }

  public virtual void pushBoolean(bool value) {
    NeoNativeEnginePINVOKE.MScriptContext_pushBoolean(swigCPtr, value);
  }

  public virtual void pushInteger(int value) {
    NeoNativeEnginePINVOKE.MScriptContext_pushInteger(swigCPtr, value);
  }

  public virtual void pushFloat(float value) {
    NeoNativeEnginePINVOKE.MScriptContext_pushFloat(swigCPtr, value);
  }

  public virtual void pushPointer(SWIGTYPE_p_void value) {
    NeoNativeEnginePINVOKE.MScriptContext_pushPointer(swigCPtr, SWIGTYPE_p_void.getCPtr(value));
  }

  public virtual bool isNumber(uint arg) {
    bool ret = NeoNativeEnginePINVOKE.MScriptContext_isNumber(swigCPtr, arg);
    return ret;
  }

  public virtual bool isFunctionOk(string name, uint args) {
    bool ret = NeoNativeEnginePINVOKE.MScriptContext_isFunctionOk(swigCPtr, name, args);
    return ret;
  }

  public bool isRunning() {
    bool ret = NeoNativeEnginePINVOKE.MScriptContext_isRunning(swigCPtr);
    return ret;
  }

}
